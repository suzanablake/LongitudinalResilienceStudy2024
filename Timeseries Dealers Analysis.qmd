---
title: "Identifying key fishing communities in the GOM Region for a resilience to disasters analysis"
author: "Suzana Blake et al."
format: html
editor: visual
---

### Research Questions

## 1. What are the key commercial species in each state? Are any of these species already considered climate vulnerable, if so which ones?

## 2. Has the composition of species changed over time - becoming more or less diverse, if so how often and what states, and what communities?

## 3. What are the key commercial fishing communities in each state?

## 4. Number of dealers by decade, by state - overall Gulf - how has that changed over time?

-   what are the communities that started off with high landings, but consolidated

## Further questions:

# 1. Which of communities with high landings throughout the analysis period have been affected by hurricanes?

# 2. Which of the communities that started off with high landings but consolidated - or just reduced landings dramatically, were affected by hurricanes?

```{r setup, include=FALSE}
library("tidyverse")
library("here")
library("skimr")
library("janitor")
library("dplyr")
#Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
#knitr::opts_chunk$set(echo = FALSE)
options(scipen = 999) # takes away the scientific notation 
```

Import the two dealer data files and prepare them for merging

```{r, include=FALSE}

Gulf_Landings <- read.delim2("~/Resilience/DATA/Gulf Landings 1977-2013.csv.txt")
#limpse(Gulf_Landings)
Gulf_Landings$Year <- as.numeric(Gulf_Landings$Year)

head(Gulf_Landings)
unique(Gulf_Landings$Grade.Desc)
unique(Gulf_Landings$FL.Coast)
unique(Gulf_Landings$Source)
unique(Gulf_Landings$DataSupplier) #"LA" "TX" "AL" "MS" "FL" "GA" "NC"

unique(Gulf_Landings$LandingState) #"LA" "TX" "AL" "MS" "FL" "GA" "UN" "SC" "NC"

Gulf_Landings %>% filter(FL.Coast == 'EAST') %>%
  nrow() #103 landings we don't want to include in this analysis

WestGulf<-Gulf_Landings[!(Gulf_Landings$FL.Coast =="EAST"),] #take out the landings on the east coast of FL
WestGulf %>% filter(FL.Coast == 'EAST') %>%
  nrow()

WestGulf2<-WestGulf[!(WestGulf$LandingState =="UN" | WestGulf$LandingState =="SC" |WestGulf$LandingState =="NC" | WestGulf$LandingState =="GA"),]
unique(WestGulf2$LandingState)

Gulf_Landings20 <- read.delim("~/Resilience/DATA/Gulf States Landings_2014-2020.xlsx.txt")
head(Gulf_Landings20)
unique(Gulf_Landings20$nmfs_code) 
unique(Gulf_Landings20$gss_code)
unique(Gulf_Landings20$GulfAtl) 
unique(Gulf_Landings20$Shoreline) #"Shoreline" "shoreline" "Interior"  "INTERIOR"
Gulf_Landings20$Shoreline[which(Gulf_Landings$Shoreline == "Shoreline")] <- "shoreline"  # fix spelling 
Gulf_Landings20$Shoreline[which(Gulf_Landings$Shoreline == "Interior")] <- "interior"
Gulf_Landings20$Shoreline[which(Gulf_Landings$Shoreline == "INTERIOR")] <- "interior"


```

```{r, include=FALSE}
GL<-clean_names(WestGulf2)
names(GL)
head(GL)


GL20<-clean_names(Gulf_Landings20)
names(Gulf_Landings20)
head(Gulf_Landings20)
#Only2005_GL <- filter(GL, year > 2005 & common_name %in% c("SHRIMP, NORTHERN BROWN", "SHRIMP, NORTHERN WHITE","SHRIMP, NORTHERN PINK" ))

(echo = TRUE)
```

Change column names to be the same in the two data files

```{r, include=FALSE}

d13 <- GL %>% select("year", "data_supplier","supplier_dealer_id","corporate_name","dealer_state","county_name","city","postal_code", "species_itis","common_name","live_lbs","value") 
colnames(d13) <-c ("landed_year","data_supplier_st","dealer_id","corporate_name","dealer_state","county_name","dealer_city","zipcode", "species_itis","common_name","live_lbs","value")

names(d13)
head(GL20)
names(GL20)
```

Select only the columns that are found in the two datafiles and I need in the final dataset

```{r, include=FALSE}
d20 <- GL20 %>% select("yearland","alsstate","dealer","dealername","state","countyname","city","zip_code","species_itis","common_nam","round_lbs","landed_val")
                       
colnames(d20) <-c("landed_year","data_supplier_st","dealer_id","corporate_name","dealer_state","county_name","dealer_city","zipcode", "species_itis","common_name","live_lbs","value")

names(d20)
(echo = TRUE)
```

Merge and clean the \$ and commas from the numeric columns

```{r, include=FALSE}

TS_Dealers <- rbind(d13, d20) 

TS_Dealers$value<-gsub("[^0-9.-]", "", TS_Dealers$value)
TS_Dealers$live_lbs<-gsub("[^0-9.-]", "", TS_Dealers$live_lbs)# find and replace - anything that is not a number replace it with nothing


```

Make sure the columns are defined correctly

```{r, include=FALSE}

TS_Dealers$landed_year <- as.numeric(TS_Dealers$landed_year)
TS_Dealers$value <- as.numeric(TS_Dealers$value)
TS_Dealers$live_lbs <- as.numeric(TS_Dealers$live_lbs)
```

Remove states that are not a part of the GOM region

I have over 24 thousand records that are not assigned to a state - not sure how to deal with them

```{r, include=FALSE}
#unique(TS_Dealers$common_name) # 863 species
#unique(TS_Dealers$dealer_state)
#unique(TS_Dealers$year)
head(TS_Dealers)
table(TS_Dealers$dealer_state, useNA="always")
length(unique(TS_Dealers$dealer_state)) 

GOM_Dealers<-TS_Dealers[!(TS_Dealers$dealer_state=="GA"| TS_Dealers$dealer_state=="UN"| TS_Dealers$dealer_state=="NC" | TS_Dealers$dealer_state == "SC"),]

table(GOM_Dealers$dealer_state, useNA="always")
length(unique(GOM_Dealers$dealer_state)) 

knitr::opts_chunk$set(echo = FALSE)
```

next clean up the shrimp species data
```{r}

GOM <- GOM_Dealers %>%
    mutate(common_name = recode(common_name,"SHRIMP, NORTHERN PINK" = 'Pink Shrimp', "SHRIMP, NORTHERN BROWN" = 'Brown Shrimp', "SHRIMP, NORTHERN WHITE" =  'White Shrimp', "SHRIMP, PINK" = 'Pink Shrimp', "SHRIMP, BROWN" = 'Brown Shrimp', "SHRIMP, WHITE" =  'White Shrimp'))

write.csv(GOM, "~/Resilience/DATA\\Final_GOM_Dealers_Data.csv", row.names = TRUE)

```

Adjusting Values for Inflation to 2020 prices

```{r}
#GOM$X <- NULL #deletes the X column 
GOM
Inflation <- read.csv("InflationAdj.csv")
Infl_2020 <- Inflation[Inflation$landed_year==2020,][,2] #this is a dataframe to use to adjust the value to 2020

Infl_2020 <- Inflation[Inflation$Year==2020,][,2]
# next we are adding the inflation index values to our master file - left joing by year
#first make sure the column names are the same; so changing "Year" to landed_year"

colnames(Inflation)[1]<-"landed_year" 
#left join - look into dplyer
GOM_I<- left_join (GOM,Inflation)

GI <- GOM_I %>% mutate(Adjust_factor=Infl_2020/Inflation_index, Adjusted_Val=round(Adjust_factor*value,0)) #created a new column with the operation for Infl adjustement and then rounded the results





```


### KEY SPECIES LANDED BY STATE

```         
  ## FLORIDA
```

?? Brittany - how do I create and save a table that has both the species code and the common name; - noticed that the common name shows up differently, but it is not clear if species itis code corrects the problem

Most valuable species FL: 1. Pink Shrimp 2. Spiny Lobster 3. Stone Crab 4. eastern oyster 5. Red Grouper 6. Stripped Mullet 7. Blue Crab 8. Bait shrimp 9. Red Snapper 10. Brown Shrimp

```{r}

FL <- GI %>% 
      filter(dealer_state =='FL')

Sum_by_SpeciesFL <- FL %>% group_by(species_itis, common_name) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Sum_by_SpeciesFL[order(-Sum_by_SpeciesFL$sum_lbs),]

Sum_by_Species_valFL <- FL %>% group_by(species_itis, common_name) %>% summarise(sum_val = sum(Adjusted_Val, na.rm = TRUE))
Sum_by_Species_valFL[order(-Sum_by_Species_valFL$sum_val),]


```

```         
  ## LOUISIANA
```

```{r}
LA <- GI %>% 
      filter(dealer_state =='LA')

Sum_by_SpeciesLA <- LA %>% group_by(species_itis, common_name) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Sum_by_SpeciesLA[order(-Sum_by_SpeciesLA$sum_lbs),]

Sum_by_Species_valLA <- LA %>% group_by(species_itis, common_name) %>% summarise(sum_val = sum(Adjusted_Val, na.rm = TRUE))
Sum_by_Species_valLA[order(-Sum_by_Species_valLA$sum_val),]
```

```         
  ## MISSISSIPPI
```

```{r}
MS <- GI %>% 
      filter(dealer_state =='MS')

Sum_by_SpeciesMS <- MS %>% group_by(species_itis, common_name) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Sum_by_SpeciesMS[order(-Sum_by_SpeciesMS$sum_lbs),]

Sum_by_Species_valMS <- MS %>% group_by(species_itis, common_name) %>% summarise(sum_val = sum(Adjusted_Val, na.rm = TRUE))
Sum_by_Species_valMS[order(-Sum_by_Species_valMS$sum_val),]
```

```         
  ## ALABAMA
```

```{r}
AL <- GI%>% 
      filter(dealer_state =='AL')

Sum_by_SpeciesAL <- AL %>% group_by(species_itis, common_name) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Sum_by_SpeciesAL[order(-Sum_by_SpeciesAL$sum_lbs),]

Sum_by_Species_valAL <- AL %>% group_by(species_itis, common_name) %>% summarise(sum_val = sum(Adjusted_Val, na.rm = TRUE))
Sum_by_Species_valAL[order(-Sum_by_Species_valAL$sum_val),]
```

```         
  ## TEXAS
```

```{r}
TX <- GI %>% 
      filter(dealer_state =='TX')

Sum_by_SpeciesTX <- TX %>% group_by(species_itis, common_name) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Sum_by_SpeciesTX[order(-Sum_by_SpeciesTX$sum_lbs),]

Sum_by_Species_valTX <- TX %>% group_by(species_itis, common_name) %>% summarise(sum_val = sum(Adjusted_Val, na.rm = TRUE))
Sum_by_Species_valTX[order(-Sum_by_Species_valTX$sum_val),]
```

### Top speceis by state

see excel table
Florida	Value
1	Pink Shrimp
2	Caribean Spiny Lobster 
3	Stone Crab 
4	Easter Oyster
5	Red Grouper 
	
Louisiana 	Value
1	White Shrimp
2	Brown Shrimp
3	Menhadens
4	Blue Crab
5	Eastern Oyster 
	
Mississippi	Value
1	Menhadens
2	Brown Shrimp
3	White Shrimp
4	Oyster Eastern
5	Red Snapper
	
Alabama	Value
1	Brown Shrimp
2	White Shrimp
3	Pink Shrimp
4	Blue Crab
5	Eastern Oyster
	
Texas	Value
1	Brown Shrimp
2	White Shrimp
3	Oyster Eastern
4	Red Snapper
5	Pink Shrimp

### Top Species for the GULF region

## Summarize pounds by Live_lbs and Value to find out what are the key species in the Gulf

```{r}
Sum_by_SpeciesGOM_L <- GI %>% group_by(species_itis, common_name) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Sum_by_SpeciesGOM_L[order(-Sum_by_SpeciesGOM_L$sum_lbs),]

Sum_by_SpeciesGOM_val <- GI %>% group_by(species_itis, common_name) %>% summarise(sum_val = sum(Adjusted_Val, na.rm = TRUE))
Sum_by_SpeciesGOM_val[order(-Sum_by_SpeciesGOM_val$sum_val),]

#names(GOM_Dealers)

#knitr::opts_chunk$set(echo = FALSE)
```


### Subset the first 10 species for the GOM region: 1.Brown Shrimp 2.White Shrimp 3.Eastern Oyster 4.Pink Shrimp 5.Blue Crab 6.Spiny Lobster 7.Stone Crab 8.Red Grouper 9.Red Snapper 10.Striped Mullet

```{r}

Species <- c("Brown Shrimp","White Shrimp", "OYSTER, EASTERN","Pink Shrimp", "CRAB, BLUE", "LOBSTER", "CARIBBEAN SPINY", "CRAB, STONE", "GROUPER, RED", "SNAPPER, RED", "MULLET, STRIPED")


Top10<-GI[GI$common_name %in% Species,]
#unique(Top10$year)
#Top10 %>% filter(Top10$year=="2010"| Top10$year== "2009" |Top10$year== "2008" | Top10$year== "2007"| Top10$year== "2006"| Top10$year== "2005")

ggplot(Top10,aes(x=landed_year, y=live_lbs))+
  stat_summary(geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))

ggplot(Top10,aes(x=landed_year, y=Adjusted_Val))+
  stat_summary(geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))


ggplot(Top10,aes(x=as.numeric(landed_year), y=live_lbs))+
  facet_wrap(~common_name)+
  stat_summary(geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))

ggplot(Top10,aes(x=as.numeric(landed_year), y=Adjusted_Val))+
  facet_wrap(~common_name)+
  stat_summary(geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))


#ggsave ("Top10_facet.png", width=8, height=6, units="in")

#knitr::opts_chunk$set(echo = FALSE)
```

Subset to ALL (PINK, BROWN AND WHITE) Shrimp

1.  BY POUNDS

```{r}
Shrimp <- c("551570", "551574", "551680")

GOM_Shrimp <- GOM[GOM$species_itis %in% Shrimp,]

ggplot(GOM_Shrimp,aes(x=as.numeric(year), y=live_lbs))+
  stat_summary(aes(fill=common_name), geom="bar", fun="mean", na.rm = T)+
  geom_smooth()+
  theme(axis.text.x = element_text(angle=90))



```

Trends for all shrimp combined: A. By Value
looks like Pink Shrimp is missing in certain periods

```{r}
ggplot(GOM_Shrimp,aes(x=as.numeric(year), y=value))+
  stat_summary(aes(fill=common_name), geom="bar", fun="mean", na.rm = T)+
  geom_smooth()+
  theme(axis.text.x = element_text(angle=90))

```

##Shrimp trends B. By Value



Other species A. Blue Crab

```{r}
BCrab <- GOM %>% 
      filter(common_name =='CRAB, BLUE')
#BCrab <- BCrab[BCrab$value > 0] <- NA

ggplot(BCrab,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~dealer_state)+
  stat_summary(aes(fill=dealer_state), geom="bar", fun="mean", na.rm = T)+
  geom_smooth()+
  theme(axis.text.x = element_text(angle=90))


ggplot(BCrab,aes(x=as.numeric(year), y=value))+
  facet_wrap(~dealer_state)+
  stat_summary(aes(fill=dealer_state), geom="bar", fun="mean", na.rm = T)+
  geom_smooth()+
  theme(axis.text.x = element_text(angle=90))
```

Oysters by State

-   here FL has an interesting evolution - check

```{r}
Oysters <- GOM %>% 
      filter(common_name =='OYSTER, EASTERN')


ggplot(Oysters,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~dealer_state)+
  stat_summary(aes(fill=dealer_state), geom="bar", fun="mean", na.rm = T)+
  geom_smooth()+
  theme(axis.text.x = element_text(angle=90))


ggplot(Oysters,aes(x=as.numeric(year), y=value))+
  facet_wrap(~dealer_state)+
  stat_summary(aes(fill=dealer_state), geom="bar", fun="mean", na.rm = T)+
  geom_smooth()+
  theme(axis.text.x = element_text(angle=90))
```

##Blue Crab by state (LBS and Value)

```{r}
BCrab <- GOM %>% 
      filter(common_name =='CRAB, BLUE')


ggplot(BCrab,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~dealer_state)+
  stat_summary(aes(fill=dealer_state), geom="bar", fun="mean", na.rm = T)+
  geom_smooth()+
  theme(axis.text.x = element_text(angle=90))


ggplot(BCrab,aes(x=as.numeric(year), y=value))+
  facet_wrap(~dealer_state)+
  stat_summary(aes(fill=dealer_state), geom="bar", fun="mean", na.rm = T)+
  geom_smooth()+
  theme(axis.text.x = element_text(angle=90))
```

##Lobster

```{r}
Lobster <- GOM %>% 
      filter(species_itis =='97648')


ggplot(Lobster,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~dealer_state)+
  stat_summary(aes(fill=dealer_state), geom="bar", fun="mean", na.rm = T)+
  geom_smooth()+
  theme(axis.text.x = element_text(angle=90))


ggplot(Lobster,aes(x=as.numeric(year), y=value))+
  facet_wrap(~dealer_state)+
  stat_summary(aes(fill=dealer_state), geom="bar", fun="mean", na.rm = T)+
  geom_smooth()+
  theme(axis.text.x = element_text(angle=90))
```

##Summarize Shrimp by State, community

```{r}

Shrimp_State <- GOM_Shrimp %>% group_by(dealer_state) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Shrimp_State[order(-Shrimp_State$sum_lbs),]
#head(GOM_Shrimp)

#knitr::opts_chunk$set(echo = FALSE)
```

##Louisiana: Trends for species by community



```{r}
SpeciesLA <- c("Brown Shrimp","White Shrimp","CRAB, BLUE","OYSTER, EASTERN", "Procambarus", "TUNA","YELLOWFIN", "SNAPPER, RED", "DRUM, BLACK", "CATFISH, BLUE")
 
           

Top10_LA<-LA[LA$common_name %in% Species,]
#unique(Top10$year)
#Top10 %>% filter(Top10$year=="2010"| Top10$year== "2009" |Top10$year== "2008" | Top10$year== "2007"| Top10$year== "2006"| Top10$year== "2005")

ggplot(Top10_LA,aes(x=year, y=live_lbs))+
  stat_summary(geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))

ggplot(Top10_LA,aes(x=year, y=value))+
  facet_wrap(~county_name)+
  stat_summary(geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))

```

Cameron


```{r}
Cameron_P <- LA %>% filter(LA$county_name=="CAMERON")
Top10_CAM <-Cameron_P[Cameron_P$common_name %in% SpeciesLA,]

ggplot(Top10_CAM,aes(x=year, y=value))+
    stat_summary(geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))


ggplot(Top10_CAM,aes(x=year, y=value))+
  facet_wrap(~common_name)+
  stat_summary(geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))


```

```



```{r}
library(dplyr)

Shrimp_LA <- GOM_Shrimp %>% filter(GOM_Shrimp$dealer_state=="LA")


ggplot(Shrimp_LA,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~county_name)+
  stat_summary(aes(fill=common_name), geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))


```

```{r}
ggplot(Shrimp_LA,aes(x=as.numeric(year), y=value))+
  facet_wrap(~county_name)+
  stat_summary(aes(fill=common_name), geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))

```

Find key counties in LA for Shrimp

Plotted the top ones for both pounds landed and value. Shall we look at trends beyond top counties?

## Top Counties with Landed Shrimp by Pounds Landed

```{r}

LA_Shrimp_Cty <- Shrimp_LA %>% group_by(county_name) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
LA_Shrimp_Cty[order(-LA_Shrimp_Cty$sum_lbs),]


LA_Shrimp_Cty_Val <- Shrimp_LA %>% group_by(county_name) %>% summarise(sum_val = sum(value, na.rm = TRUE))
LA_Shrimp_Cty_Val[order(-LA_Shrimp_Cty_Val$sum_val),]
```


##Top Counties with Landed Shrimp by Value

-   the same counties show up - the only difference is that for value, Plaquemines falls on the 4th place instead of 3rd.

Plot these 8 top counties in LA

```{r}
Counties_La <- c("TERREBONNE","JEFFERSON","PLAQUEMINES","LAFOURCHE","VERMILION","CAMERON","ST BERNARD","ST MARY")

Shrimp_Cty_LA<-Shrimp_LA[Shrimp_LA$county_name %in% Counties_La,]

ggplot(Shrimp_Cty_LA,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~county_name)+
  stat_summary(aes(fill=common_name), geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))


```

##Identifying top CDPs by Parish In Louisiana for landing shrimp

#1. Cameron Parish, LA - top Shrimp CDPs

```{r cameron}
Cameron <- Shrimp_Cty_LA %>% filter(Shrimp_Cty_LA$county_name=="CAMERON")

Top_Cameron <- Cameron %>% group_by(city) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Top_Cameron[order(-Top_Cameron$sum_lbs),]



```

Cameron has a clear downward trend - slow and steady; seems that the recent hurricanes only continued the previous trajectories; hackeberry looks pretty stable

```{r}
City_Cam <- c("CAMERON","HACKBERRY","GRAND CHENIER")	

Cameron_Shr_city<-Cameron[Cameron$city %in% City_Cam,]

ggplot(Cameron_Shr_city,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~city)+
  stat_summary(aes(fill=TotalS), geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))




```

Look into other species in CAMERON

```{r}

```

##2. Jefferson Parish, LA - top Shrimp CDPs

```{r}
Jefferson <- Shrimp_Cty_LA %>% filter(Shrimp_Cty_LA$county_name=="JEFFERSON")

Top_Jefferson <- Jefferson %>% group_by(city) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Top_Jefferson[order(-Top_Jefferson$sum_lbs),]
```

In Jefferson County - Grand Isle seems resilient as a fishing community in terms of landings.

```{r}
City_Jeff <- c("LAFITTE","GRAND ISLE","MARRERO","GRETNA","GOLDEN MEADOW","BARATARIA","CROWN POINT","WESTWEGO")

Jefferson_Shr_city<-Jefferson[Jefferson$city %in% City_Jeff,]

ggplot(Jefferson_Shr_city,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~city)+
  stat_summary(aes(fill=TotalS),geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))


```

##3. Lafourche Parish top Shrimp CDPs

```{r}
Lafourche <- Shrimp_Cty_LA %>% filter(Shrimp_Cty_LA$county_name=="LAFOURCHE")

Top_Lafourche <- Lafourche %>% group_by(city) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Top_Lafourche[order(-Top_Lafourche$sum_lbs),]
```

```{r}

City_Lafourche <- c("GOLDEN MEADOW","CUT OFF","LOCKPORT","THERIOT")

Lafourche_Shr_city<-Lafourche[Lafourche$city %in% City_Lafourche,]

ggplot(Lafourche_Shr_city,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~city)+
  stat_summary(aes(fill=TotalS),geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))


```

##3. Plaquemines Parish top Shrimp CDPs

Top cities by Pounds

```{r}
Plaquemines <- Shrimp_Cty_LA %>% filter(Shrimp_Cty_LA$county_name=="PLAQUEMINES")

Top_Plaquemines <- Plaquemines %>% group_by(city) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Top_Plaquemines[order(-Top_Plaquemines$sum_lbs),]
```

Top cities by Value

```{r}

Top_Plaquemines_val <- Plaquemines %>% group_by(city) %>% summarise(sum_val = sum(value, na.rm = TRUE))
Top_Plaquemines_val[order(-Top_Plaquemines_val$sum_val),]
```

Trends by Pounds

```{r}
City_Plaquemines <- c("EMPIRE", "VENICE", "BOOTHVILLE", "VENICE", "BURAS","PORT SULPHUR", "MORGAN CITY","MADISONVILLE")

Plaquemines_Shr_city<-Plaquemines[Plaquemines$city %in% City_Plaquemines,]

ggplot(Plaquemines_Shr_city,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~city)+
  stat_summary(aes(fill=TotalS),geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))
```

Trends by Value

```{r}
Plaquemines_Shr_city<-Plaquemines[Plaquemines$city %in% City_Plaquemines,]

ggplot(Plaquemines_Shr_city,aes(x=as.numeric(year), y=value))+
  facet_wrap(~city)+
  stat_summary(aes(fill=TotalS),geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))
```

###Florida Spiny Lobster Identify top counties for Lobster in FL: Collier, Lee and Monroe

```{r}
Lobst_FL <- FL %>% filter(FL$species_itis=="97648")


ggplot(Lobst_FL,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~county_name)+
  stat_summary(aes(fill=common_name), geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))
```

Identify top CDPs in Monroe

there is an issue here - the city/CDPs in Miami Dade show up in Monroe

```{r}

Lobs_Cty<- Lobst_FL %>% group_by(county_name) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Lobs_Cty[order(-Lobs_Cty$sum_lbs),]

Monroe <- Lobst_FL %>% filter(Lobst_FL$county_name=="MONROE")

Top_Monroe <- Monroe %>% group_by(city) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Top_Monroe[order(-Top_Monroe$sum_lbs),]

Top_Monroe_val <- Monroe %>% group_by(city) %>% summarise(sum_val = sum(value, na.rm = TRUE))
Top_Monroe_val[order(-Top_Monroe_val$sum_val),]

```

### Trends for Lobster in Monroe CDPs

```{r}
CDP_Monroe <- c("MARATHON", "KEY WEST", "KEY LARGO", "SUMMERLAND KEY","ISLAMORADA", "TAVERNIER")

Monroe_top<-Monroe[Monroe$city %in% CDP_Monroe,]

ggplot(Monroe_top,aes(x=as.numeric(year), y=live_lbs))+
  facet_wrap(~city)+
  stat_summary(aes(fill=common_name),geom="bar", fun="mean", na.rm = T)+
  theme(axis.text.x = element_text(angle=90))
```

```{r}

#Lobs_Cty<- Lobst_FL %>% group_by(county_name) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
#Lobs_Cty[order(-Lobs_Cty$sum_lbs),]

Miami <- Lobst_FL %>% filter(Lobst_FL$county_name=="MIAMI-DADE")

Top_Miami <- Miami %>% group_by(city) %>% summarise(sum_lbs = sum(live_lbs, na.rm = TRUE))
Top_Miami[order(-Top_Miami$sum_lbs),]

Top_Miami_val <- Miami %>% group_by(city) %>% summarise(sum_val = sum(value, na.rm = TRUE))
Top_Miami_val[order(-Top_Miami_val$sum_val),]
```
